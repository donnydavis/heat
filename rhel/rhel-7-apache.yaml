heat_template_version: 2013-05-23

description: >
  HOT template to deploy two servers into an existing neutron tenant network and
  assign floating IP addresses to each server so they are routable from the
  public network.

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: precision
  image:
    type: string
    description: Name of image to use for servers
    default: rhel7-httpd
    constraints:
      - allowed_values: [ rhel7-httpd ]
        description: Image ID must be rhel7-httpd
  flavor:
    type: string
    description: Flavor to use for servers
    default: m1.medium
    constraints:
      - allowed_values: [m1.small, m1.medium]
  public_net_id:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    default: 431a16f4-8060-4e9a-9e41-e1bbd71cf09f
    constraints:
      - allowed_values: [ 431a16f4-8060-4e9a-9e41-e1bbd71cf09f ]
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: f50949d1-16a3-41b6-b5c0-8b4a41f6776e
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: 47615aa0-eabd-4ba9-8485-72c8c3d9d039

resources:
  web_server_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      max_size: 3
      resource:
        type: https://raw.githubusercontent.com/donnydavis/heat/master/load-balancer/lb.yaml
        properties:
          flavor: {get_param: flavor}
          image: {get_param: image}
          key_name: {get_param: key_name}
          pool_id: {get_resource: pool}
          metadata: {"metering.stack": {get_param: "OS::stack_id"}}
          user_data:
            str_replace:
              template: |
                yum -y install php
                curl -o /var/www/html/index.php https://raw.githubusercontent.com/donnydavis/heat/master/rhel/index.php
                systemctl enable httpd
                systemctl restart httpd
              params: 
                {} 

  web_server_scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: 1

  web_server_scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: web_server_group}
      cooldown: 60
      scaling_adjustment: -1

  net_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-up if outgoing traffic > 20000 Bytes over 1 minute
      meter_name: network.outgoing.bytes.rate
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 20
      alarm_actions:
        - {get_attr: [web_server_scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  net_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-down if outgoing traffic < 10000 Bytes over 2 minutes
      meter_name: network.outgoing.bytes.rate
      statistic: avg
      period: 120
      evaluation_periods: 1
      threshold: 10
      alarm_actions:
        - {get_attr: [web_server_scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt
  
  lb_vip_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }

  lb_vip_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }  
      port_id: { get_resource: lb_vip_port }

  lb_pool_vip:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: lb_vip_floating_ip }
      port_id: { 'Fn::Select': ['port_id', {get_attr: [pool, vip]}]}

  monitor:
    type: OS::Neutron::HealthMonitor
    properties:
      type: TCP
      delay: 5
      max_retries: 5
      timeout: 5

  pool:
    type: OS::Neutron::Pool
    properties:
      protocol: HTTP
      monitors: [{get_resource: monitor}]
      subnet_id: {get_param: private_subnet_id}
      lb_method: ROUND_ROBIN
      vip:
        protocol_port: 80
        ## session_persistence:
        ##   type: SOURCE_IP

  lb:
    type: OS::Neutron::LoadBalancer
    properties:
      protocol_port: 80
      pool_id: {get_resource: pool}
outputs:
  WebsiteURL:
    description: URL for web demo page
    value:
      str_replace:
        template: http://host/index.php
        params:
          host: { get_attr: [lb_vip_floating_ip, floating_ip_address] }